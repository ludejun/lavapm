<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
	PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap>
	  
	<resultMap id="empletmanage" class="com.lavapm.tenant.entity.Templetmanage" >
	    <result column="tid" property="tid"  />
	    <result column="rid" property="rid"  />
	    <result column="t_name" property="t_name"  />
	     <result column="t_desc" property="t_desc"  />
	    <result column="tenantId" property="tenantId"  />
	    <result column="create_time" property="create_time" />
	    <result column="update_time" property="update_time" />
	    <result column="op_umid" property="op_umid" />
  	</resultMap>
  	
  	<resultMap id="userroleempletmanage" class="com.lavapm.tenant.entity.Templetmanage" >
	    <result column="tid" property="tid"  />
	    <result column="rid" property="rid"  />
	    <result column="t_name" property="t_name"  />
	     <result column="t_desc" property="t_desc"  />
	    <result column="tenantId" property="tenantId"  />
	    <result column="create_time" property="create_time" />
	    <result column="update_time" property="update_time" />
	    <result column="op_umid" property="op_umid" />
	    <result column="isupdate" property="isupdate" />
	     <result column="user_name" property="userName" />
  	</resultMap>
	  
  	
     <resultMap id="userMap" class="com.lavapm.tenant.entity.User" >
	    <result column="rid" property="rid"  />
	    <result column="umid" property="umid"  />
	    <result column="user_name" property="userName"  />
	    <result column="user_password" property="userPassword"  />
	     <result column="user_desc" property="userDesc"  />
	    <result column="gender" property="gender"  />
	    <result column="birthday" property="birthday" />
	    <result column="email" property="email" />
	    <result column="telphone" property="telphone" />
	    <result column="mobile" property="mobile"  />
	    <result column="title" property="title"  />
	    <result column="tenant_id" property="tenantId"  />
	     <result column="departmentName" property="departmentName"  />
	    <result column="status" property="status"  />
	    <result column="create_time" property="createTime" />
	    <result column="update_time" property="updateTime" />
	    <result column="op_umid" property="opUmid" />
  	</resultMap>
  	
  	 <resultMap id="userDeptMap" class="com.lavapm.tenant.entity.User" >
	    <result column="rid" property="rid"  />
	    <result column="umid" property="umid"  />
	    <result column="user_name" property="userName"  />
	    <result column="user_password" property="userPassword"  />
	     <result column="user_desc" property="userDesc"  />
	    <result column="gender" property="gender"  />
	    <result column="birthday" property="birthday" />
	    <result column="email" property="email" />
	    <result column="telphone" property="telphone" />
	    <result column="mobile" property="mobile"  />
	    <result column="title" property="title"  />
	    <result column="tenant_id" property="tenantId"  />
	     <result column="departmentName" property="departmentName"  />
	    <result column="status" property="status"  />
	    <result column="create_time" property="createTime" />
	    <result column="update_time" property="updateTime" />
	    <result column="op_umid" property="opUmid" />
	    <result column="dept_name" property="deptName" />
	     <result column="puserName" property="puserName" />
	    
  	</resultMap>
  	
  <select id="getUsers" resultMap="userDeptMap"  parameterClass="java.util.HashMap">
	   SELECT uu.*,ud.dept_name,puu.user_name as puserName  from  UM_USER uu  
			LEFT JOIN UM_DEPT_USER udu on uu.rid=udu.user_rid
			LEFT JOIN UM_DEPARTMENT ud on   udu.dept_rid=ud.rid
			LEFT JOIN UM_USER puu on uu.op_umid=puu.umid
			WHERE uu.tenant_id=#developerid#   and udu.dept_rid=#deptRid#  and uu.op_umid=#opUmid#
			<isNotEmpty prepend="AND" property ="odeptRid">
	         	udu.dept_rid!=#odeptRid#
		    </isNotEmpty>
  </select>
  
  <select id="getUsersAll" resultMap="userDeptMap"  parameterClass="java.util.HashMap">
	  SELECT uu.*,ud.dept_name,puu.user_name as puserName  from  UM_USER uu  
			LEFT JOIN UM_DEPT_USER udu on uu.rid=udu.user_rid
			LEFT JOIN UM_DEPARTMENT ud on   udu.dept_rid=ud.rid
			LEFT JOIN UM_USER puu on uu.op_umid=puu.umid
			WHERE uu.tenant_id=#developerid#   and udu.dept_rid=#deptRid#  
			<isNotEmpty prepend="AND" property ="odeptRid">
	         	udu.dept_rid!=#odeptRid#
		    </isNotEmpty>
  </select>
  
   <select id="findByUmid"  resultMap="userMap" parameterClass="java.lang.String">
    select * 
	 from  UM_USER where umid = #umid#
  </select>
  
   <insert id="insertuser" parameterClass="java.util.HashMap">
    insert into UM_USER(umid,user_name,user_password,user_desc,gender,birthday,email,telphone,mobile,title,tenant_id,departmentName,status,create_time,update_time,op_umid)
 	values(#umid#,#userName#,#userPassword#,#userDesc#,#gender#,#birthday#,#email#,#telphone#,#mobile#,#title#,#tenantId#,#departmentName#,#status#,now(),now(),#opUmid#)
  	<selectKey resultClass="java.lang.Integer"  keyProperty="rid">
	  SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  
  <insert id="insertDertUser" parameterClass="java.util.HashMap">
    insert into UM_DEPT_USER(dept_rid,user_rid,create_time,update_time,op_umid)
 	values(#deptrid#,#urid#,now(),now(),#opUmid#)
  	<selectKey resultClass="java.lang.Integer"  keyProperty="rid">
	  SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  
  
 
    <update id="updateUserByPrimaryKeySelective" parameterClass="java.util.HashMap" >
	    update UM_USER  set 
		 <isNotEmpty  property ="umid">
			umid=#umid#,
		 </isNotEmpty>
		<isNotEmpty  property ="umid">
			user_name=#userName#,
		</isNotEmpty>
		<isNotEmpty  property ="userPassword">
			user_password=#userPassword#,
		</isNotEmpty>
		<isNotEmpty  property ="userDesc">
			user_desc=#userDesc#,
		</isNotEmpty>
		<isNotEmpty  property ="gender">
			gender=#gender#,
		</isNotEmpty>
		<isNotEmpty  property ="birthday">
			birthday=#birthday#,
		</isNotEmpty>
		<isNotEmpty  property ="email">
			email=#email#,
		</isNotEmpty>
		<isNotEmpty  property ="telphone">
			telphone=#telphone#,
		</isNotEmpty>
		<isNotEmpty  property ="mobile">
			mobile=#mobile#,
		</isNotEmpty>
		<isNotEmpty  property ="title">
			title=#title#,
		</isNotEmpty>
		<isNotEmpty  property ="tenantId">
			tenant_id=#tenantId#,
		</isNotEmpty>
		<isNotEmpty  property ="departmentName">
			departmentName=#departmentName#,
		</isNotEmpty>
		<isNotEmpty  property ="status">
			status=#status#,
		</isNotEmpty>
		<isNotEmpty  property ="createTime">
			create_time=#createTime#,
		</isNotEmpty>
		<isNotEmpty  property ="updateTime">
			update_time=#updateTime#,
		</isNotEmpty>
		<isNotEmpty  property ="opUmid">
			op_umid=#opUmid#,
		</isNotEmpty>
		 rid=#rid#
		 where rid=#rid#
  </update>
  
   <update id="editUsers" parameterClass="java.util.HashMap" >
	    update UM_DEPT_USER  set 
			dept_rid=#deptrid#
		    where user_rid in ($qdurids$)
  </update>
    
    <delete id="deleteRoleUser"   parameterClass="java.util.HashMap">
	  delete from  UM_ROLE_USER 
	  where role_rid in ($rids$) and user_rid=#umid#
   </delete>
   
   <delete id="deleteRoleUserByUmid"   parameterClass="java.util.HashMap">
	  delete from  UM_ROLE_USER 
	  where  user_rid=#umid#
   </delete>
   
   <insert id="insertRoleUser" parameterClass="com.lavapm.tenant.entity.RoleUser" >
    insert into UM_ROLE_USER(role_rid,user_rid,is_grantable,granted_by,create_time)
 	values(#roleRid#,#userRid#,#isGrantable#,#grantedBy#,now())
  	<selectKey resultClass="java.lang.Integer"  keyProperty="rid">
	  SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  
  <!-- <select id="getRoleUserList"  resultMap="empletmanage" parameterClass="java.util.HashMap">
    select *  from UM_TEMPLETMANAGE ut where ut.rid in(
	SELECT ur.rid from  UM_ROLE_USER  uru  INNER JOIN UM_ROLE ur on uru.role_rid=ur.rid
	WHERE  uru.user_rid=#umid# and ur.status=0
	) 
  </select> -->
  
  <select id="getRoleUserList"  resultMap="userroleempletmanage" parameterClass="java.util.HashMap">
	 select ut.*,
		case 
		 WHEN uu.user_name is null THEN '系统创建' ELSE uu.user_name 
		end as user_name,
		case 
		 WHEN ut.op_umid=#opUmid# or 1=#isAdmin# THEN 1 ELSE 2 
		end as isupdate  
	from UM_TEMPLETMANAGE ut 
	LEFT JOIN UM_ROLE ur on ut.rid=ur.rid
	LEFT JOIN UM_ROLE_USER uru on ur.rid=uru.role_rid
	LEFT JOIN UM_USER  uu on ut.op_umid = uu.umid
	where ur.status=0 and uru.user_rid=#umid#; 
  </select>
  
   <delete id="deleteUser"   parameterClass="java.util.HashMap">
	  delete from  UM_USER 
	  where umid=#umid#
   </delete>
   
  
    
   
</sqlMap>